// generated by react-router-hono-server/dev
import { createHonoServer } from "react-router-hono-server/bun";
import { initializeLogger, getLogger } from "~/lib/core/logger/logger.server";
import { initializeServer } from "~/lib/services/startup";

// Initialize LogTape only in production (development uses entry.server.tsx)
if (process.env.NODE_ENV === 'production') {
  await initializeLogger();
}

const server = await createHonoServer();

// Initialize server services (job execution scheduler, etc.)
await initializeServer({
  enableJobExecution: true,
  jobExecutionConfig: {
    checkIntervalSeconds: 30,
    maxConcurrentJobs: 3
  }
});

// Log server startup only in production
if (process.env.NODE_ENV === 'production') {
  const port = process.env.PORT || 3000;
  const nodeEnv = process.env.NODE_ENV || 'development';

  getLogger().info('Starting Abaqus Job Manager server', 'SERVER_STARTUP', {
    port,
    environment: nodeEnv,
    bunVersion: Bun.version,
    timestamp: new Date().toISOString()
  });

  getLogger().info('Server started successfully', 'SERVER_READY', {
    port,
    environment: nodeEnv,
    pid: process.pid
  });
}

// Note: Graceful shutdown is now handled by the unified SchedulerSystem
// via ServerInitializationService.initializeServer()

export default server;
